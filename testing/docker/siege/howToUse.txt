Terminal 1
1.  cd ./testing/docker
    export WEBSERV_HOST_IP=$(hostname -I | awk '{print $2}') && \
    docker compose build && \
    docker compose up -d

Terminal 2
2.  docker exec -it webserv bash
    to change files:
        echo -en "http://<hostname -I - second parameter>:8080/upload POST < body.txt" > urls.txt
        echo -en "POST /upload HTTP/1.1\r\nHost: 192.168.122.1:8080\r\nAccept: */*\r\nAccept-Encoding: *\r\nUser-Agent: Mozilla/5.0 (pc-x86_64-linux-gnu) Siege/4.2.0-b2\r\nConnection: close\r\nContent-Type: multipart/form-data; boundary=boundary123\r\nContent-Length: 145\r\n\r\n--boundary123\r\nContent-Disposition: form-data; name="myfile"; filename=\"test.txt\"\r\nContent-Type: text/plain\r\n\r\nhello from siege\r\n--boundary123--\r\n" > body.txt

Terminal 3 (or 1)
3.  Run Webserv

Terminal 2
4.  Either use commands "get"/"post" or create your own tests:
    siege -c10 -t3s --content-type "multipart/form-data; boundary=boundary123" --file=urls.txt
    -c<value> amount of clients
    -t<value>s amount of time

    Change file to be given
    echo "http://<hostname -I - second parameter>:8080/upload POST < fileIs8MB.txt" > urls.txt

echo -e "--boundary123\r\nContent-Disposition: form-data; name=\"myfile\"; filename=\"test.txt\"\r\nContent-Type: text/plain\r\n\r\n" > /opt/postRequest/body.txt && \
yes "hello from siege!" | head -c 8388608 >> /opt/postRequest/body.txt && \
echo -e "\r\n--boundary123--\r\n" >> /opt/postRequest/body.txt